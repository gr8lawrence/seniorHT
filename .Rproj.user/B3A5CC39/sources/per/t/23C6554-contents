library(tidyverse)

### this file processes the rna-seq data from 
  # 5 clinical trials

# Load data
dataPath <- "/Users/gr8lawrence/Desktop/Senior Honors Thesis/datasets/"
load(paste(dataPath, "Aguirre_seq.RData", sep = ""))
load(paste(dataPath, "COMPASS.RData", sep = ""))
load(paste(dataPath, "Linehan_Seq.RData", sep = ""))
load(paste(dataPath, "Moffitt_GEO_array.RData", sep = ""))
load(paste(dataPath, "TCGA_PAAD.RData", sep = ""))

# Reduce datasets to common genes
# adjust Aguirre's gene symbol to factors
# Aguirre_seq$featInfo$SYMBOL <- as.factor(Aguirre_seq$featInfo$SYMBOL)
# note: Aguirre is dropped for the moment

# Sort expression by gene name
geneSort <- function(d) { # d is the name of the dataset
  index <- order(d$featInfo$SYMBOL)
  d$ex[ , ] <- d$ex[index, ] 
  d$featInfo[ , ] <- d$featInfo[index, ]
  return(d)
}

COMPASS <- geneSort(COMPASS)
Linehan_Seq <- geneSort(Linehan_Seq)
Moffitt_GEO_array <- geneSort(Moffitt_GEO_array)
TCGA_PAAD <- geneSort(TCGA_PAAD)

# Get the list of gene symbols from datasets
getGeneSymbols <- function(d) {
  symbols <- d$featInfo$SYMBOL
  return(symbols)
}

commonNames1 <- intersect(getGeneSymbols(Linehan_Seq), getGeneSymbols(COMPASS))
commonNames2 <- intersect(getGeneSymbols(Moffitt_GEO_array), getGeneSymbols(TCGA_PAAD))
commonNames <- intersect(commonNames1, commonNames2)

# Subset the datasets to ones of common genes
matchCommonGenes <- function(d) {
  index <- match(commonNames, d$featInfo$SYMBOL)
  d$ex <- d$ex[index, ]
  d$featInfo <- d$featInfo[index, ]
  return(d)
}

Lin <- matchCommonGenes(Linehan_Seq) 
Com <- matchCommonGenes(COMPASS)
Mof <- matchCommonGenes(Moffitt_GEO_array)
Mof$featInfo <- as.list(Mof$featInfo)
Tcga <- matchCommonGenes(TCGA_PAAD)

# Rank transform the common genes for each sample

rankTransform <- function(d) {
  for (i in 1:dim(d$ex)[2]) {
    d$ex[,i] <- rank(d$ex[,i])
  }
  return(d)
}

rankedLin <- rankTransform(Lin)
rankedCom <- rankTransform(Com)
rankedMof <- rankTransform(Mof)
rankedTcga <- rankTransform(Tcga)

# Use Wilcox rank sum test to select the highly expressed genes across datasets

wilcoxTest <- function(d) {
  df <- tibble(genename = d$featInfo$SYMBOL, 
               pval = rep(0, dim(d$ex)[1]) ) # initiate a data frame
  for (i in 1:dim(d$ex)[1]) {
    pval <- as.double(wilcox.test(data.matrix(d$ex[i,]))[["p.value"]])
    df$pval[i] <- pval
  }
  return(df)
}

# Run the Random Forest model on the common genes
library(randomForest)
